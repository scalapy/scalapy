name: ScalaPy CI

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [published]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ 3.9, "3.10", "3.11", "3.12" ]
    steps:
      - uses: actions/checkout@master
      - uses: coursier/cache-action@v6
      - name: Set up JDK 1.8 and SBT
        uses: coursier/setup-action@v1
        with:
          jvm: adopt:1.16
          apps: sbt
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Log Python Config
        run: python3-config --ldflags && ls $(python3-config --prefix)/lib
        shell: bash
      - name: Test JVM and native
        run: sbt +coreJVM/test +coreNative/test
        shell: bash
      - name: Test python-native-libs
        run: sbt +pythonNativeLibsTestJVM/test +pythonNativeLibsTestNative/test
        shell: bash
      - name: Compile Benchmarks
        run: sbt benchJVM/compile benchNative/compile
        shell: bash
  publish:
    needs: [test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'release'
    steps:
    - uses: actions/checkout@master
    - name: Set up JDK 1.8 and SBT
      uses: coursier/setup-action@v1
      with:
        jvm: adopt:1.16
        apps: sbt
    - run: git fetch --unshallow
    - name: Publish with SBT
      run: export JAVA_OPTS="-Xmx4g" && bash ./publish.sh
      env:
        encrypted_key: ${{ secrets.key }}
        encrypted_iv: ${{ secrets.iv }}
        PGP_PASSPHRASE: ${{ secrets.pgp_passphrase }}
